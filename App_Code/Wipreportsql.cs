using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.SqlClient;
using System.Web.Services;
using System.Configuration;

/// <summary>
///Wipreportsql 的摘要说明
/// </summary>
public class Wipreportsql
{
	public Wipreportsql()
	{
		//
		//TODO: 在此处添加构造函数逻辑
		//
	}

    //查找该JO的part的数量
    public SqlDataReader getpartnum(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select COUNT(1)as QTY from (select PART_CD from CIPMS_BUNDLE_FOR_SCANNING where JOB_ORDER_NO='" + jo + "' group by PART_CD)as a";
        return sqlComGet.ExecuteReader();
    }
    //查找jo/part的汇总
    //public SqlDataReader getjopart(SqlConnection sqlConn, string jo)
    //{
    //    SqlCommand sqlComGet = new SqlCommand();
    //    sqlComGet.Connection = sqlConn;
    //    sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.PART_CD,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING, SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC, SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.JOB_ORDER_NO='" + jo + "' GROUP BY a.JOB_ORDER_NO,a.PART_CD";
    //    return sqlComGet.ExecuteReader();
    //}
    public SqlDataReader getjopart(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.GARMENT_ORDER_NO='" + go + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC ORDER BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader bundlegetjopart(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO,f.PART_DESC,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.GARMENT_ORDER_NO='" + go + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO,f.PART_DESC ORDER BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryjo(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.JOB_ORDER_NO='" + jo + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC ORDER BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD";
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A INNER JOIN CIPMS_JO_WIP_HD AS B ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND B.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygo(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.JOB_ORDER_NO='" + jo + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC ORDER BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD";
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.CUT_LINE,SUM(IN_QTY)AS IN_QTY,SUM(REDUCE_QTY)AS REDUCE_QTY,SUM(MATCHING)AS MATCHING,SUM(OUT_QTY)AS OUT_QTY,SUM(PCS_WIP)AS PCS_WIP,SUM(TRANSFER_IN)AS TRANSFER_IN,SUM(TRANSFER_OUT)AS TRANSFER_OUT FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS A GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //public SqlDataReader bundlequeryjo(SqlConnection sqlConn, string jo)
    //{
    //    SqlCommand sqlComGet = new SqlCommand();
    //    sqlComGet.Connection = sqlConn;
    //    sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO,f.PART_DESC,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.JOB_ORDER_NO='" + jo + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO,f.PART_DESC ORDER BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO";
    //    return sqlComGet.ExecuteReader();
    //}
    public SqlDataReader bundlequeryjo(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO,f.PART_DESC,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.JOB_ORDER_NO='" + jo + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO,f.PART_DESC ORDER BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,a.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    //UPDATE BY JACOB 20151216
    public SqlDataReader queryjopart(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.JOB_ORDER_NO='" + jo + "' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PART_DESC,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,B.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"')AS C GROUP BY C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygopart(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE D.GARMENT_ORDER_NO='" + go + "' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PART_DESC,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"')AS C GROUP BY C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryjobundle(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='" + jo + "' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO ORDER BY C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A WITH(NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH(NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND B.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH(NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.JOB_ORDER_NO='" + jo + "' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO ORDER BY C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygobundle(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //UPDATE BY JACOB 20151216
    public SqlDataReader queryjocolorsize(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND A.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.CUT_LINE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.CUT_LINE";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygocolorsize(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.CUT_LINE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.PROCESS_CD,A.CUT_LINE,SUM(IN_QTY)AS IN_QTY,SUM(REDUCE_QTY)AS REDUCE_QTY,SUM(MATCHING)AS MATCHING,SUM(OUT_QTY)AS OUT_QTY,SUM(PCS_WIP)AS PCS_WIP,SUM(TRANSFER_IN)AS TRANSFER_IN,SUM(TRANSFER_OUT)AS TRANSFER_OUT FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE)AS A GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.CUT_LINE";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryjobundlepart(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO,C.PART_DESC ORDER BY C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PART_DESC,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D ON A.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"')AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO,C.PART_DESC ORDER BY C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygobundlepart(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO,C.PART_DESC ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PART_DESC,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"')AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE,C.BUNDLE_NO,C.PART_DESC ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryjobundlecolorsize(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.CUT_LINE ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.CUT_LINE ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygobundlecolorsize(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.CUT_LINE ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.CUT_LINE ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryjopartcolorsize(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,C.CUT_LINE ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.PART_DESC,C.CUT_LINE ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygopartcolorsize(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,C.CUT_LINE ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"')AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.PART_DESC,C.CUT_LINE ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryjopartbundlecolorsize(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.JOB_ORDER_NO='"+jo+"')AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querygopartbundlecolorsize(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE D.GARMENT_ORDER_NO='"+go+"' AND B.WIP>0)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.PART_DESC,SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.GARMENT_ORDER_NO='"+go+"')AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE ORDER BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //update 20151116 by Jacob 添加了CIPMS_BUNDLE_FOR_SCANNING的inner join
    public SqlDataReader queryallprocess(SqlConnection sqlConn)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT SUM(WIP)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN WIP ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN WIP ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN WIP ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN IN_QTY-MATCHING-DISCREPANCY_QTY ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN MATCHING-OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN WIP ELSE 0 END)AS SEW FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD where a.WIP>0";
        //sqlComGet.CommandText = "SELECT SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID WHERE B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO)AS C";
        //sqlComGet.CommandText = "SELECT SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS C ON A.JOB_ORDER_NO=C.JOB_ORDER_NO AND A.COLOR_CODE=C.COLOR_CD AND A.SIZE_CODE=C.SIZE_CD AND A.PART_CD=C.PART_CD AND A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND A.PRODUCTION_LINE_CD=C.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=C.GARMENT_TYPE AND A.PROCESS_TYPE=C.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID AND B.BUNDLE_NO=C.BUNDLE_NO WHERE B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO)AS C";
        sqlComGet.CommandText = "SELECT SUM(CASE C.PROCESS_CD WHEN 'CUT' THEN C.PCS_WIP ELSE 0 END)AS CUT,SUM(CASE C.PROCESS_CD WHEN 'PRT' THEN C.PCS_WIP ELSE 0 END)AS PRT,SUM(CASE C.PROCESS_CD WHEN 'EMB' THEN C.PCS_WIP ELSE 0 END)AS EMB,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.PCS_WIP-C.MATCHING ELSE 0 END) as MATCHING,SUM(CASE C.PROCESS_CD WHEN 'DC' THEN C.MATCHING-C.OUT_QTY ELSE 0 END)AS DC FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO)AS C";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //update 20151116 by Jacob 添加了CIPMS_BUNDLE_FOR_SCANNING的inner join
    //ADD BY JACOB 20151216
    public SqlDataReader queryline(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT D.CUT_LINE,SUM(D.PCS_WIP)AS PCS_WIP FROM (select A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,C.CUT_LINE,MIN(B.WIP)AS PCS_WIP from CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS C ON A.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,C.CUT_LINE)AS D GROUP BY D.CUT_LINE";
        //sqlComGet.CommandText = "SELECT D.CUT_LINE,SUM(D.PCS_WIP)AS PCS_WIP FROM (select A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,C.CUT_LINE,MIN(B.WIP)AS PCS_WIP from CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS C ON A.JOB_ORDER_NO=C.JOB_ORDER_NO AND A.COLOR_CODE=C.COLOR_CD AND A.SIZE_CODE=C.SIZE_CD AND A.PART_CD=C.PART_CD AND A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND A.PRODUCTION_LINE_CD=C.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=C.GARMENT_TYPE AND A.PROCESS_TYPE=C.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID AND C.BUNDLE_NO=B.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,C.CUT_LINE)AS D GROUP BY D.CUT_LINE";
        sqlComGet.CommandText = "SELECT D.CUT_LINE,SUM(D.PCS_WIP)AS PCS_WIP FROM (select A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(B.WIP)AS PCS_WIP FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS D GROUP BY D.CUT_LINE";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader querysewline(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT D.PRODUCTION_LINE_CD,(SUM(D.MATCHING)-SUM(D.OUT_QTY))AS AFTER_MATCHING_QTY,(SUM(D.PCS_WIP)-SUM(D.MATCHING))AS BEFORE_MATCHING_QTY FROM (select A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,C.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP from CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CUT_BUNDLE_HD AS C ON A.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.BUNDLE_NO=C.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,C.PRODUCTION_LINE_CD)AS D GROUP BY D.PRODUCTION_LINE_CD";
        sqlComGet.CommandText = "SELECT D.PRODUCTION_LINE_CD,(SUM(D.MATCHING)-SUM(D.OUT_QTY))AS AFTER_MATCHING_QTY,(SUM(D.PCS_WIP)-SUM(D.MATCHING))AS BEFORE_MATCHING_QTY FROM (select A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PRODUCTION_LINE_CD,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CUT_BUNDLE_HD AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND A.BUNDLE_NO=D.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PRODUCTION_LINE_CD)AS D GROUP BY D.PRODUCTION_LINE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocess(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.PRODUCTION_LINE_CD,cast(F.total_qty as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.PRODUCTION_LINE_CD,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,G.PRODUCTION_LINE_CD)AS C GROUP BY C.JOB_ORDER_NO,C.PRODUCTION_LINE_CD)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    //UPDATE BY JACOB 20151216
    public SqlDataReader queryoneprocess2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.CUT_LINE,cast(F.total_qty as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.CUT_LINE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.CUT_LINE,cast(F.total_qty as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.CUT_LINE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessjo(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.PRODUCTION_LINE_CD,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,cast(F.total_qty as int)as ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.PRODUCTION_LINE_CD,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD)AS C GROUP BY C.JOB_ORDER_NO,C.PRODUCTION_LINE_CD)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessjo2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.CUT_LINE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,cast(F.total_qty as int)as ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.CUT_LINE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessgo(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.PRODUCTION_LINE_CD,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,cast(F.total_qty as int)as ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.PRODUCTION_LINE_CD,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,G.PRODUCTION_LINE_CD)AS C GROUP BY C.JOB_ORDER_NO,C.PRODUCTION_LINE_CD)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessgo2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.JOB_ORDER_NO,E.CUT_LINE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,cast(F.total_qty as int)as ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.JOB_ORDER_NO,C.CUT_LINE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C GROUP BY C.JOB_ORDER_NO,C.CUT_LINE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundle(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PRODUCTION_LINE_CD,C.PCS_WIP,CAST(F.total_qty AS INT)AS ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD,MIN(D.QTY)AS CUT_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PRODUCTION_LINE_CD,C.PCS_WIP,CAST(F.total_qty AS INT)AS ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PRODUCTION_LINE_CD,MIN(A.QTY)AS CUT_QTY,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CUT_BUNDLE_HD AS D WITH (NOLOCK) ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND A.BUNDLE_NO=D.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,D.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundle2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.CUT_LINE,C.PCS_WIP,CAST(F.total_qty AS INT)AS ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.CUT_LINE,C.PCS_WIP,CAST(F.total_qty AS INT)AS ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,A.BUNDLE_NO,A.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundle(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PRODUCTION_LINE_CD,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundle2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.CUT_LINE,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlego(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PRODUCTION_LINE_CD,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlego2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.CUT_LINE,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,B.BUNDLE_NO,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocesspart(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,D.PART_DESC,E.PRODUCTION_LINE_CD,SUM(C.IN_QTY)AS IN_QTY,SUM(C.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(C.MATCHING)AS MATCHING,SUM(C.OUT_QTY)AS OUT_QTY,SUM(C.WIP)AS PCS_WIP,SUM(C.TRANSFER_IN)AS TRANSFER_IN,SUM(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS E WITH (NOLOCK) ON A.JOB_ORDER_NO=E.JOB_ORDER_NO AND A.BUNDLE_NO=E.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,D.PART_DESC,E.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocesspart2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,D.PART_DESC,A.CUT_LINE,SUM(C.IN_QTY)AS IN_QTY,SUM(C.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(C.MATCHING)AS MATCHING,SUM(C.OUT_QTY)AS OUT_QTY,SUM(C.WIP)AS PCS_WIP,SUM(C.TRANSFER_IN)AS TRANSFER_IN,SUM(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,D.PART_DESC,A.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspart(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspart2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspartgo(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspartgo2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.PART_DESC,C.CUT_LINE,C.PCS_WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocesscolorsize(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT E.PRODUCTION_LINE_CD,E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD,MIN(D.QTY)AS ORDER_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,G.PRODUCTION_LINE_CD)AS C GROUP BY C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT E.PRODUCTION_LINE_CD,E.JOB_ORDER_NO,E.COLOR_CD,E.SIZE_CD,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,D.PRODUCTION_LINE_CD,MIN(A.QTY)AS ORDER_QTY,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CUT_BUNDLE_HD AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND A.BUNDLE_NO=D.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,D.PRODUCTION_LINE_CD)AS C GROUP BY C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocesscolorsize2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT E.CUT_LINE,E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(D.QTY)AS ORDER_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandText = "SELECT E.CUT_LINE,E.JOB_ORDER_NO,E.COLOR_CD,E.SIZE_CD,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE,MIN(A.QTY)AS ORDER_QTY,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE)AS C GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesscolorsize(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.PRODUCTION_LINE_CD,E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD,MIN(D.QTY)AS CUT_qTY,MIN(D.QTY)AS ORDER_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C GROUP BY C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesscolorsize2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.CUT_LINE,E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(D.QTY)AS CUT_qTY,MIN(D.QTY)AS ORDER_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesscolorsizego(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.PRODUCTION_LINE_CD,E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C GROUP BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PRODUCTION_LINE_CD)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesscolorsizego2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT E.CUT_LINE,E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=E.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,E.PCS_WIP,E.BEFORE_MATCHING_QTY,E.AFTER_MATCHING_QTY FROM (SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,SUM(PCS_WIP)AS PCS_WIP,(SUM(PCS_WIP)-SUM(MATCHING))AS BEFORE_MATCHING_QTY,(SUM(MATCHING)-SUM(OUT_QTY))AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE)AS E INNER JOIN JO_HD AS F ON E.JOB_ORDER_NO=F.JO_NO ORDER BY E.JOB_ORDER_NO,E.COLOR_CODE,E.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundlepart(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,B.BUNDLE_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.BUNDLE_NO,A.PROCESS_CD,D.PART_DESC,E.PRODUCTION_LINE_CD,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS E WITH (NOLOCK) ON A.JOB_ORDER_NO=E.JOB_ORDER_NO AND A.BUNDLE_NO=E.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundlepart2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,B.BUNDLE_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.BUNDLE_NO,A.PROCESS_CD,D.PART_DESC,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepart(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,B.BUNDLE_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepart2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,B.BUNDLE_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='" + process + "' AND A.JOB_ORDER_NO='" + jo + "')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepartgo(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.PRODUCTION_LINE_CD,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,B.BUNDLE_NO,A.PROCESS_CD,E.PART_DESC,G.PRODUCTION_LINE_CD,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepartgo2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.JOB_ORDER_NO,C.BUNDLE_NO,C.PART_DESC,C.CUT_LINE,C.WIP,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,B.BUNDLE_NO,A.PROCESS_CD,E.PART_DESC,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON B.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocesspartcolorsize(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD,SUM(D.QTY)AS CUT_qTY,SUM(D.QTY)AS ORDER_QTY,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,D.PART_DESC,A.PROCESS_CD,E.PRODUCTION_LINE_CD,SUM(A.QTY)AS CUT_qTY,SUM(A.QTY)AS ORDER_QTY,SUM(C.IN_QTY)AS IN_QTY,SUM(C.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(C.MATCHING)AS MATCHING,SUM(C.OUT_QTY)AS OUT_QTY,SUM(C.WIP)AS PCS_WIP,SUM(C.TRANSFER_IN)AS TRANSFER_IN,SUM(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS E WITH (NOLOCK) ON A.JOB_ORDER_NO=E.JOB_ORDER_NO AND A.BUNDLE_NO=E.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,E.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocesspartcolorsize2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,SUM(D.QTY)AS CUT_qTY,SUM(D.QTY)AS ORDER_QTY,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,SUM(A.QTY)AS CUT_qTY,SUM(A.QTY)AS ORDER_QTY,SUM(C.IN_QTY)AS IN_QTY,SUM(C.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(C.MATCHING)AS MATCHING,SUM(C.OUT_QTY)AS OUT_QTY,SUM(C.WIP)AS PCS_WIP,SUM(C.TRANSFER_IN)AS TRANSFER_IN,SUM(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspartcolorsize(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD,SUM(D.QTY)AS ORDER_QTY,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspartcolorsize2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,SUM(D.QTY)AS ORDER_QTY,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspartcolorsizego(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocesspartcolorsizego2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,SUM(B.IN_QTY)AS IN_QTY,SUM(B.DISCREPANCY_QTY)AS REDUCE_QTY,SUM(B.MATCHING)AS MATCHING,SUM(B.OUT_QTY)AS OUT_QTY,SUM(B.WIP)AS PCS_WIP,SUM(B.TRANSFER_IN)AS TRANSFER_IN,SUM(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundlecolorsize(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD,MIN(D.QTY)AS CUT_qTY,MIN(D.QTY)AS ORDER_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,D.PRODUCTION_LINE_CD,MIN(A.QTY)AS CUT_qTY,MIN(A.QTY)AS ORDER_QTY,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CUT_BUNDLE_HD AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND A.BUNDLE_NO=D.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,D.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundlecolorsize2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(D.QTY)AS CUT_qTY,MIN(D.QTY)AS ORDER_QTY,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0 GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE,MIN(A.QTY)AS CUT_qTY,MIN(A.QTY)AS ORDER_QTY,MIN(C.IN_QTY)AS IN_QTY,MAX(C.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(C.MATCHING)AS MATCHING,MAX(C.OUT_QTY)AS OUT_QTY,MIN(C.WIP)AS PCS_WIP,MIN(C.TRANSFER_IN)AS TRANSFER_IN,MAX(C.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD WHERE A.PROCESS_CD='"+process+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,A.PROCESS_CD,A.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlecolorsize(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlecolorsize2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlecolorsizego(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,G.PRODUCTION_LINE_CD)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlecolorsizego2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.PCS_WIP,(PCS_WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE,MIN(B.IN_QTY)AS IN_QTY,MAX(B.DISCREPANCY_QTY)AS REDUCE_QTY,MAX(B.MATCHING)AS MATCHING,MAX(B.OUT_QTY)AS OUT_QTY,MIN(B.WIP)AS PCS_WIP,MIN(B.TRANSFER_IN)AS TRANSFER_IN,MAX(B.TRANSFER_OUT)AS TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"' GROUP BY A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,A.PROCESS_CD,D.CUT_LINE)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE";
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundlepartcolorsize(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,E.PRODUCTION_LINE_CD,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS E WITH (NOLOCK) ON A.JOB_ORDER_NO=E.JOB_ORDER_NO AND A.BUNDLE_NO=E.BUNDLE_NO WHERE A.PROCESS_CD='"+process+"' )AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    //ADD BY JACOB 20151216
    public SqlDataReader queryoneprocessbundlepartcolorsize2(SqlConnection sqlConn, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND B.WIP>0)AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CD,A.SIZE_CD,A.BUNDLE_NO,D.PART_DESC,A.PROCESS_CD,A.CUT_LINE,C.IN_QTY,C.DISCREPANCY_QTY,C.MATCHING,C.OUT_QTY,C.WIP,C.TRANSFER_IN,C.TRANSFER_OUT FROM CIPMS_BUNDLE_FOR_SCANNING AS A  WITH (NOLOCK) INNER JOIN CIPMS_JO_WIP_HD AS B WITH (NOLOCK) ON A.JOB_ORDER_NO=B.JOB_ORDER_NO AND A.COLOR_CD=B.COLOR_CODE AND A.SIZE_CD=B.SIZE_CODE AND A.PART_CD=B.PART_CD AND A.FACTORY_CD=B.FACTORY_CD AND A.PROCESS_CD=B.PROCESS_CD AND A.PRODUCTION_LINE_CD=B.PRODUCTION_LINE_CD AND A.GARMENT_TYPE=B.GARMENT_TYPE AND A.PROCESS_TYPE=B.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS C WITH (NOLOCK) ON B.STOCK_ID=C.STOCK_ID AND A.BUNDLE_NO=C.BUNDLE_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_PART_MASTER AS D WITH (NOLOCK) ON A.PART_CD=D.PART_CD WHERE A.PROCESS_CD='"+process+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CD,C.SIZE_CD,C.BUNDLE_NO";
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepartcolorsize(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepartcolorsize2(SqlConnection sqlConn, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND A.JOB_ORDER_NO='"+jo+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepartcolorsizego(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.PRODUCTION_LINE_CD,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,G.PRODUCTION_LINE_CD,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CUT_BUNDLE_HD AS G ON D.JOB_ORDER_NO=G.JOB_ORDER_NO AND D.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocessbundlepartcolorsizego2(SqlConnection sqlConn, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO,C.PART_DESC,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,CAST(F.total_qty AS INT)AS ORDER_QTY,C.WIP,(WIP-MATCHING)AS BEFORE_MATCHING_QTY,(MATCHING-OUT_QTY)AS AFTER_MATCHING_QTY FROM (SELECT A.JOB_ORDER_NO,A.COLOR_CODE,A.SIZE_CODE,B.BUNDLE_NO,E.PART_DESC,A.PROCESS_CD,D.CUT_LINE,B.IN_QTY,B.DISCREPANCY_QTY,B.MATCHING,B.OUT_QTY,B.WIP,B.TRANSFER_IN,B.TRANSFER_OUT FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND B.BUNDLE_NO=D.BUNDLE_NO AND B.PART_CD=D.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.PROCESS_CD='"+process+"' AND D.GARMENT_ORDER_NO='"+go+"')AS C INNER JOIN JO_HD AS F ON C.JOB_ORDER_NO=F.JO_NO ORDER BY C.JOB_ORDER_NO,C.COLOR_CODE,C.SIZE_CODE,C.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader bundlequeryallprocess(SqlConnection sqlConn)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT SUM(WIP)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN WIP ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN WIP ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN WIP ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN IN_QTY-MATCHING-DISCREPANCY_QTY ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN MATCHING-OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN WIP ELSE 0 END)AS SEW FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocess1(SqlConnection sqlConn, string factory, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select PRODUCTION_LINE_CD,SUM(WIP)as QTY from CIPMS_JO_WIP_HD where FACTORY_CD='" + factory + "' AND PROCESS_CD='" + process + "' AND PROCESS_TYPE='I' AND GARMENT_TYPE='K' group by PROCESS_CD,PRODUCTION_LINE_CD ORDER BY PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocess2(SqlConnection sqlConn, string factory, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select PRODUCTION_LINE_CD,SUM(IN_QTY-MATCHING-DISCREPANCY_QTY)as MATCHING,SUM(MATCHING-OUT_QTY)as DC from CIPMS_JO_WIP_HD where FACTORY_CD='" + factory + "' AND PROCESS_CD='" + process + "' AND PROCESS_TYPE='I' AND GARMENT_TYPE='K' group by PROCESS_CD,PRODUCTION_LINE_CD ORDER BY PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjoallprocess(SqlConnection sqlConn, string factory, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,SUM(WIP)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN WIP ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN WIP ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN WIP ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN IN_QTY-MATCHING-DISCREPANCY_QTY ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN MATCHING-OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN WIP ELSE 0 END)AS SEW FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by JOB_ORDER_NO,COLOR_CODE,SIZE_CODE,PART_DESC,PROCESS_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjooneprocess1(SqlConnection sqlConn, string factory, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,SUM(WIP)AS QTY FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.JOB_ORDER_NO='" + jo + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' and a.WIP>0 group by JOB_ORDER_NO,COLOR_CODE,SIZE_CODE,PART_DESC,PROCESS_CD";
        sqlComGet.CommandText = "select PRODUCTION_LINE_CD,SUM(WIP)as QTY from CIPMS_JO_WIP_HD where FACTORY_CD='" + factory + "' and JOB_ORDER_NO='" + jo + "' AND PROCESS_CD='" + process + "' AND PROCESS_TYPE='I' AND GARMENT_TYPE='K' group by PROCESS_CD,PRODUCTION_LINE_CD ORDER BY PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjooneprocess2(SqlConnection sqlConn, string factory, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,SUM(WIP)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN IN_QTY-MATCHING-DISCREPANCY_QTY ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN MATCHING-OUT_QTY ELSE 0 END)AS DC FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.JOB_ORDER_NO='" + jo + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' and a.WIP>0 group by JOB_ORDER_NO,COLOR_CODE,SIZE_CODE,PART_DESC,PROCESS_CD";
        sqlComGet.CommandText = "select PRODUCTION_LINE_CD,SUM(WIP)AS QTY,SUM(IN_QTY-MATCHING-DISCREPANCY_QTY) as MATCHING,SUM(MATCHING-OUT_QTY)AS DC from CIPMS_JO_WIP_HD where FACTORY_CD='" + factory + "' and JOB_ORDER_NO='" + jo + "' AND PROCESS_CD='" + process + "' AND PROCESS_TYPE='I' AND GARMENT_TYPE='K' group by PROCESS_CD,PRODUCTION_LINE_CD ORDER BY PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygoallprocess(SqlConnection sqlConn, string factory, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,a.PROCESS_CD,SUM(WIP)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN WIP ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN WIP ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN WIP ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN IN_QTY-MATCHING-a.DISCREPANCY_QTY ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN MATCHING-OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN WIP ELSE 0 END)AS SEW FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PRODUCTION_LINE_CD=c.PRODUCTION_LINE_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='"+go+"' and a.FACTORY_CD='"+factory+"' and a.PROCESS_CD='"+process+"' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,a.PROCESS_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygooneprocess1(SqlConnection sqlConn, string factory, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,a.PROCESS_CD,SUM(WIP)AS QTY FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PRODUCTION_LINE_CD=c.PRODUCTION_LINE_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='"+go+"' and a.FACTORY_CD='"+factory+"' and a.PROCESS_CD='"+process+"' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' and a.WIP>0 group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,a.PROCESS_CD";
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(WIP)AS QTY from CIPMS_JO_WIP_HD as a inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PRODUCTION_LINE_CD=c.PRODUCTION_LINE_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='"+go+"' and a.FACTORY_CD='"+factory+"' and a.PROCESS_CD='"+process+"' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.PROCESS_CD,a.PRODUCTION_LINE_CD ORDER BY a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygooneprocess2(SqlConnection sqlConn, string factory, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,a.PROCESS_CD,SUM(WIP)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN IN_QTY-MATCHING-a.DISCREPANCY_QTY ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN MATCHING-OUT_QTY ELSE 0 END)AS DC FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PRODUCTION_LINE_CD=c.PRODUCTION_LINE_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='"+go+"' and a.FACTORY_CD='"+factory+"' and a.PROCESS_CD='"+process+"' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' and a.WIP>0 group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,a.PROCESS_CD";
        sqlComGet.CommandText = "SELECT a.PRODUCTION_LINE_CD,SUM(WIP)AS QTY,SUM(IN_QTY-MATCHING-a.DISCREPANCY_QTY) as MATCHING,SUM(MATCHING-OUT_QTY)AS DC FROM CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PRODUCTION_LINE_CD=c.PRODUCTION_LINE_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.PROCESS_CD,a.PRODUCTION_LINE_CD ORDER BY a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    //查找JO/BUNDLE/PART
    public SqlDataReader getjobundlepart(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC,a.BUNDLE_NO,SUM(a.QTY)AS QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN QTY ELSE 0 END)AS CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN QTY ELSE 0 END)AS PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN QTY ELSE 0 END)AS EMB,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.IN_QTY-b.MATCHING ELSE 0 END) as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.MATCHING-b.OUT_QTY ELSE 0 END)AS DC,SUM(CASE a.PROCESS_CD WHEN 'SEW' THEN QTY ELSE 0 END)AS SEW FROM CIPMS_BUNDLE_FOR_SCANNING as a inner join CIPMS_PART_MASTER as f on a.PART_CD=f.PART_CD inner join CIPMS_JO_WIP_HD as b on a.JOB_ORDER_NO=b.JOB_ORDER_NO and a.COLOR_CD=b.COLOR_CODE and a.SIZE_CD=b.SIZE_CODE and a.PART_CD=b.PART_CD and a.PROCESS_CD=b.PROCESS_CD and a.PRODUCTION_LINE_CD=b.PRODUCTION_LINE_CD and a.PROCESS_TYPE=b.PROCESS_TYPE inner join CIPMS_JO_WIP_BUNDLE as c on b.STOCK_ID=c.STOCK_ID and a.BUNDLE_NO=c.BUNDLE_NO WHERE a.GARMENT_ORDER_NO='" + go + "' GROUP BY a.JOB_ORDER_NO,a.COLOR_CD,a.SIZE_CD,f.PART_DESC,a.BUNDLE_NO ORDER BY a.JOB_ORDER_NO,a.BUNDLE_NO";
        return sqlComGet.ExecuteReader();
    }
}