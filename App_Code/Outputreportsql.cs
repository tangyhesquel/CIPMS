using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.SqlClient;
using System.Web.Services;
using System.Configuration;

/// <summary>
///Outputreportsql 的摘要说明
/// </summary>
public class Outputreportsql
{
    public Outputreportsql()
    {
        //
        //TODO: 在此处添加构造函数逻辑
        //
    }

    public SqlDataReader getjo(SqlConnection sqlConn, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PART_CD,b.PART_DESC,SUM(CASE PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE PROCESS_CD WHEN 'EMB' THEN a.OUT_QTY ELSE 0 END)as EMB,SUM(CASE PROCESS_CD WHEN 'FUSE' THEN a.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.JOB_ORDER_NO='" + jo + "' AND a.PROCESS_TYPE='I' GROUP BY a.JOB_ORDER_NO,a.PART_CD,b.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader getgo(SqlConnection sqlConn, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PART_CD,b.PART_DESC,SUM(CASE PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE PROCESS_CD WHEN 'EMB' THEN a.OUT_QTY ELSE 0 END)as EMB,SUM(CASE PROCESS_CD WHEN 'FUSE' THEN a.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.JOB_ORDER_NO in (select JOB_ORDER_NO from CIPMS_BUNDLE_FOR_SCANNING where GARMENT_ORDER_NO='" + go + "' group by JOB_ORDER_NO) AND a.PROCESS_TYPE='I' GROUP BY a.JOB_ORDER_NO,a.PART_CD,b.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader getdate(SqlConnection sqlConn, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.PART_CD,c.PART_DESC,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'MATCHING' THEN b.QTY ELSE 0 END)as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD on a.DOC_NO=b.DOC_NO where a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.PART_CD,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader getjodate(SqlConnection sqlConn, string jo, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.PART_CD,c.PART_DESC,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'MATCHING' THEN b.QTY ELSE 0 END)as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD on a.DOC_NO=b.DOC_NO where a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' and b.JOB_ORDER_NO='" + jo + "' group by b.PART_CD,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader getgodate(SqlConnection sqlConn, string go, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.PART_CD,c.PART_DESC,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'MATCHING' THEN b.QTY ELSE 0 END)as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b inner join CIPMS_BUNDLE_FOR_SCANNING as d on b.JOB_ORDER_NO=d.JOB_ORDER_NO and b.BUNDLE_NO=d.BUNDLE_NO and b.PART_CD=d.PART_CD inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD on a.DOC_NO=b.DOC_NO where a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' and d.GARMENT_ORDER_NO='" + go + "' group by b.PART_CD,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryallprocess(SqlConnection sqlConn, string factory)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select SUM(a.OUT_QTY)as QTY,SUM(CASE PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE PROCESS_CD WHEN 'EMB' THEN a.OUT_QTY ELSE 0 END)as EMB,SUM(CASE PROCESS_CD WHEN 'FUSE' THEN a.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K'";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocess1(SqlConnection sqlConn, string factory, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(a.OUT_QTY)as DC,SUM(a.MATCHING)as MATCHING from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryoneprocess2(SqlConnection sqlConn, string factory, string process)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(a.OUT_QTY)as QTY from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjoall(SqlConnection sqlConn, string factory, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,SUM(a.OUT_QTY)as QTY,SUM(CASE PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE PROCESS_CD WHEN 'EMB' THEN a.OUT_QTY ELSE 0 END)as EMB,SUM(CASE PROCESS_CD WHEN 'FUSE' THEN a.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.JOB_ORDER_NO='" + jo + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K' group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygoall(SqlConnection sqlConn, string factory, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC,SUM(a.OUT_QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,b.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querydateall(SqlConnection sqlConn, string factory, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,c.PART_DESC,SUM(b.QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD where a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjodateall(SqlConnection sqlConn, string factory, string joborderno, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "select b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,c.PART_DESC,SUM(b.QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD where b.JOB_ORDER_NO='" + jo + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,c.PART_DESC";
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='"+fromdate+"' AND A.CONFIRM_DATE<='"+todate+"' AND B.JOB_ORDER_NO='"+joborderno+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<='" + todate + "' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.JOB_ORDER_NO='" + joborderno + "' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE ORDER BY DATE";
        sqlComGet.CommandText = sql;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygodateall(SqlConnection sqlConn, string factory, string go, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,c.PART_DESC,SUM(b.QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as d on b.JOB_ORDER_NO=d.JOB_ORDER_NO and b.BUNDLE_NO=d.BUNDLE_NO and b.PART_CD=d.PART_CD where d.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjoone(SqlConnection sqlConn, string factory, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(a.OUT_QTY)as QTY from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.JOB_ORDER_NO='" + jo + "' and a.PROCESS_CD='" + process + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjoone1(SqlConnection sqlConn, string factory, string process, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(a.MATCHING)as MATCHING,SUM(a.OUT_QTY)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.JOB_ORDER_NO='" + jo + "' and a.PROCESS_CD='" + process + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygoone(SqlConnection sqlConn, string factory, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(a.OUT_QTY)as QTY from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygoone1(SqlConnection sqlConn, string factory, string process, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(a.MATCHING)as MATCHING,SUM(a.OUT_QTY)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querydateone(SqlConnection sqlConn, string factory, string process, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(b.QTY)as QTY from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD where a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_CD='" + process + "' and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjodateone(SqlConnection sqlConn, string factory, string process, string jo, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(b.QTY)as QTY from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD where b.JOB_ORDER_NO='" + jo + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygodateone(SqlConnection sqlConn, string factory, string process, string go, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.PRODUCTION_LINE_CD,SUM(b.QTY)as QTY from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as d on b.JOB_ORDER_NO=d.JOB_ORDER_NO and b.BUNDLE_NO=d.BUNDLE_NO and b.PART_CD=d.PART_CD where d.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD='" + process + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by a.PRODUCTION_LINE_CD";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjoal2(SqlConnection sqlConn, string factory, string jo)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,a.BUNDLE_NO,b.PART_DESC,SUM(a.OUT_QTY)as QTY,SUM(CASE PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE PROCESS_CD WHEN 'EMB' THEN a.OUT_QTY ELSE 0 END)as EMB,SUM(CASE PROCESS_CD WHEN 'FUSE' THEN a.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD where a.FACTORY_CD='" + factory + "' and a.JOB_ORDER_NO='" + jo + "' AND a.PROCESS_TYPE='I' and GARMENT_TYPE='K' group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,a.BUNDLE_NO,b.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygoal2(SqlConnection sqlConn, string factory, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,a.BUNDLE_NO,b.PART_DESC,SUM(a.OUT_QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN a.OUT_QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN a.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(a.MATCHING)as MATCHING,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN a.OUT_QTY ELSE 0 END)as DC from CIPMS_JO_WIP_HD as a inner join CIPMS_PART_MASTER as b on a.PART_CD=b.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as c on a.JOB_ORDER_NO=c.JOB_ORDER_NO and a.COLOR_CODE=c.COLOR_CD and a.SIZE_CODE=c.SIZE_CD and a.PART_CD=c.PART_CD and a.PROCESS_CD=c.PROCESS_CD and a.PROCESS_TYPE=c.PROCESS_TYPE where c.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_TYPE='I' and a.GARMENT_TYPE='K' group by a.JOB_ORDER_NO,a.COLOR_CODE,a.SIZE_CODE,a.BUNDLE_NO,b.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querydateal2(SqlConnection sqlConn, string factory, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,b.BUNDLE_NO,c.PART_DESC,SUM(b.QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD where a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,b.BUNDLE_NO,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjodateal2(SqlConnection sqlConn, string factory, string jo, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,b.BUNDLE_NO,c.PART_DESC,SUM(b.QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD where b.JOB_ORDER_NO='" + jo + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,b.BUNDLE_NO,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygodateal2(SqlConnection sqlConn, string factory, string go, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "select b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,b.BUNDLE_NO,c.PART_DESC,SUM(b.QTY)as QTY,SUM(CASE a.PROCESS_CD WHEN 'CUT' THEN b.QTY ELSE 0 END)as CUT,SUM(CASE a.PROCESS_CD WHEN 'PRT' THEN b.QTY ELSE 0 END)as PRT,SUM(CASE a.PROCESS_CD WHEN 'EMB' THEN b.QTY ELSE 0 END)as EMB,SUM(CASE a.PROCESS_CD WHEN 'FUSE' THEN b.QTY ELSE 0 END)as FUSE,SUM(CASE a.PROCESS_CD WHEN 'DC' THEN b.QTY ELSE 0 END)as DC from CIPMS_TRANSFER_HD as a inner join CIPMS_TRANSFER_DT as b  on a.DOC_NO=b.DOC_NO inner join CIPMS_PART_MASTER as c on b.PART_CD=c.PART_CD inner join CIPMS_BUNDLE_FOR_SCANNING as d on b.JOB_ORDER_NO=d.JOB_ORDER_NO and b.BUNDLE_NO=d.BUNDLE_NO and b.PART_CD=d.PART_CD where d.GARMENT_ORDER_NO='" + go + "' and a.FACTORY_CD='" + factory + "' and a.PROCESS_CD<>a.NEXT_PROCESS_CD and a.PROCESS_TYPE='I' and a.PROCESS_GARMENT_TYPE='K' and a.STATUS='C' and a.CONFIRM_DATE>='" + fromdate + "' and a.CONFIRM_DATE<='" + todate + "' group by b.JOB_ORDER_NO,b.COLOR_CD,b.SIZE_CD,b.BUNDLE_NO,c.PART_DESC";
        return sqlComGet.ExecuteReader();
    }
    //UPDATE BY JACOB 2015-11-23 -----ADD MATCHING
    public SqlDataReader querydate(SqlConnection sqlConn, string factory, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY,MIN(D.MATCHING)AS MATCHING FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120) ORDER BY DATE";
        //sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE ORDER BY DATE";
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='"+fromdate+"' AND A.CONFIRM_DATE<='"+todate+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<='" + todate + "' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE ORDER BY DATE";
        sqlComGet.CommandText = sql;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader getmatchingbydate(SqlConnection sqlConn, string factory, string garmenttype, string processtype, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        sqlComGet.CommandText = "SELECT SUM(A.MATCHING)AS MATCHING FROM (SELECT MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<='" + todate + "' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='" + garmenttype + "' AND E.PROCESS_TYPE='" + processtype + "' GROUP BY E.JOB_ORDER_NO,E.BUNDLE_NO)AS A";
        return sqlComGet.ExecuteReader();
    }

    public SqlDataReader queryoutput(SqlConnection sqlConn, string factory, string garmenttype, string processtype, string go_no, string jo_no, string process, string nextprocess, string fromdate, string todate,string bypart, int addi)
       // queryoutput(sqlConn,factory,garmenttype,processtype,go_no,jo_no,process,nextprocess,fromdate,todate,bypart,addi)
    {
        try
        {
            SqlCommand sqlComGet = new SqlCommand();
            sqlComGet.Connection = sqlConn;
            //sqlComGet.CommandText = "SELECT A.JOB_ORDER_NO,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO,MIN(B.OUT_QTY)AS OUT_QTY,MIN(B.MATCHING)AS MATCHING FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID WHERE A.FACTORY_CD='" + factory + "' AND A.JOB_ORDER_NO='" + jo + "' GROUP BY A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO)AS A GROUP BY A.JOB_ORDER_NO";
            string sql = "exec CIPMS_OUTPUT_REPORT '" + factory + "','" + go_no + "','" + jo_no + "','" + process + "','" + nextprocess + "','" + fromdate + "','" + todate + "','" + bypart + "'," + addi;
            sqlComGet.CommandText = sql;
            sqlComGet.CommandTimeout = 300;
            return sqlComGet.ExecuteReader();
        }
        catch (Exception ex)
        {
            return null;
        }
        finally
        {

        }
    }

    public SqlDataReader querydate(SqlConnection sqlConn, string factory, string process, string nextprocess, string garmenttype, string processtype, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        if (process == "MATCHING")
        {
            sqlComGet.CommandText = "SELECT DATE,SUM(A.MATCHING)AS MATCHING,A.CUT_LINE FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,MIN(G.MATCHING)AS MATCHING,E.CUT_LINE FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<='" + todate + "' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='" + garmenttype + "' AND E.PROCESS_TYPE='" + processtype + "' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.JOB_ORDER_NO,E.BUNDLE_NO,E.CUT_LINE)AS A GROUP BY A.CUT_LINE,DATE";
        }
        else if (process == "all" || nextprocess == "all")
        {
            //sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.CUT_LINE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,E.CUT_LINE,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY,MIN(D.MATCHING)AS MATCHING FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CUT_BUNDLE_HD AS E ON C.JOB_ORDER_NO=E.JOB_ORDER_NO AND D.BUNDLE_NO=E.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.PROCESS_GARMENT_TYPE='K' AND A.PROCESS_TYPE='I' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY A.PROCESS_CD,E.CUT_LINE,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.CUT_LINE ORDER BY DATE";
            sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.CUT_LINE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.GARMENT_TYPE,C.PROCESS_TYPE,A.PROCESS_CD,E.CUT_LINE,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.COLOR_CD=C.COLOR_CODE AND B.SIZE_CD=C.SIZE_CODE AND B.PART_CD=C.PART_CD AND A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND A.PRODUCTION_LINE_CD=C.PRODUCTION_LINE_CD AND A.PROCESS_GARMENT_TYPE=C.GARMENT_TYPE AND A.PROCESS_TYPE=C.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CUT_BUNDLE_HD AS E ON C.JOB_ORDER_NO=E.JOB_ORDER_NO AND D.BUNDLE_NO=E.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.PROCESS_GARMENT_TYPE='K' AND A.PROCESS_TYPE='I' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY C.GARMENT_TYPE,C.PROCESS_TYPE,A.PROCESS_CD,E.CUT_LINE,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.CUT_LINE,A.GARMENT_TYPE,A.PROCESS_TYPE ORDER BY DATE";
        }
        else
        {
            sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.CUT_LINE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.GARMENT_TYPE,C.PROCESS_TYPE,A.PROCESS_CD,E.CUT_LINE,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.COLOR_CD=C.COLOR_CODE AND B.SIZE_CD=C.SIZE_CODE AND B.PART_CD=C.PART_CD AND A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND A.PRODUCTION_LINE_CD=C.PRODUCTION_LINE_CD AND A.PROCESS_GARMENT_TYPE=C.GARMENT_TYPE AND A.PROCESS_TYPE=C.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CUT_BUNDLE_HD AS E ON C.JOB_ORDER_NO=E.JOB_ORDER_NO AND D.BUNDLE_NO=E.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.NEXT_PROCESS_CD='" + nextprocess + "' AND A.PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.NEXT_PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.PROCESS_TYPE='" + processtype + "' AND A.NEXT_PROCESS_TYPE='" + processtype + "' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY C.GARMENT_TYPE,C.PROCESS_TYPE,A.PROCESS_CD,E.CUT_LINE,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.CUT_LINE,A.GARMENT_TYPE,A.PROCESS_TYPE ORDER BY DATE";
        }
        return sqlComGet.ExecuteReader();
    }
    //public SqlDataReader querydatepart(SqlConnection sqlConn, string factory, string fromdate, string todate)
    //{
    //    SqlCommand sqlComGet = new SqlCommand();
    //    sqlComGet.Connection = sqlConn;
    //    //sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,E.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN D.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN D.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN D.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN D.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN D.OUT_QTY ELSE 0 END)as DC FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON C.PART_CD=E.PART_CD WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),E.PART_DESC ORDER BY DATE";
    //    sqlComGet.CommandText = "SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.PROCESS_GARMENT_TYPE AS GARMENT_TYPE,A.PROCESS_TYPE,E.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN D.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN D.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN D.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN D.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN D.OUT_QTY ELSE 0 END)as DC FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON C.PART_CD=E.PART_CD WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "' GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.PROCESS_GARMENT_TYPE,A.PROCESS_TYPE,E.PART_DESC ORDER BY DATE";
    //    return sqlComGet.ExecuteReader();
    //}
    public SqlDataReader querydatepart(SqlConnection sqlConn, string factory, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='"+fromdate+"' AND A.CONFIRM_DATE<='"+todate+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,H.PART_DESC,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS H ON E.PART_CD=H.PART_CD WHERE E.MATCHING_DATE>='"+fromdate+"' AND E.MATCHING_DATE<='"+todate+"' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='"+factory+"' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO,H.PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC ORDER BY DATE";
        sqlComGet.CommandText = sql;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjo(SqlConnection sqlConn, string factory, string joborderno)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT A.JOB_ORDER_NO,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO,MIN(B.OUT_QTY)AS OUT_QTY,MIN(B.MATCHING)AS MATCHING FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID WHERE A.FACTORY_CD='" + factory + "' AND A.JOB_ORDER_NO='" + jo + "' GROUP BY A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO)AS A GROUP BY A.JOB_ORDER_NO";
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND B.JOB_ORDER_NO='"+joborderno+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.JOB_ORDER_NO='" + joborderno + "' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE ORDER BY DATE";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjopart(SqlConnection sqlConn, string factory, string joborderno)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        //sqlComGet.CommandText = "SELECT A.JOB_ORDER_NO,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO,C.PART_DESC,B.OUT_QTY,B.MATCHING FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_PART_MASTER AS C ON A.PART_CD=C.PART_CD WHERE A.FACTORY_CD='" + factory + "' AND A.JOB_ORDER_NO='" + jo + "' AND A.GARMENT_TYPE='K' AND A.PROCESS_TYPE='I')AS A GROUP BY A.JOB_ORDER_NO,A.PART_DESC";
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND B.JOB_ORDER_NO='"+joborderno+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,H.PART_DESC,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS H ON E.PART_CD=H.PART_CD WHERE E.IS_MATCHING='Y' AND E.FACTORY_CD='"+factory+"' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.JOB_ORDER_NO='"+joborderno+"' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO,H.PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC ORDER BY DATE";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader queryjodatepart(SqlConnection sqlConn, string factory, string joborderno, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='"+fromdate+"' AND A.CONFIRM_DATE<='"+todate+"' AND B.JOB_ORDER_NO='"+joborderno+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,H.PART_DESC,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS H ON E.PART_CD=H.PART_CD WHERE E.MATCHING_DATE>='"+fromdate+"' AND E.MATCHING_DATE<='"+todate+"' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='"+factory+"' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.JOB_ORDER_NO='"+joborderno+"' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO,H.PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC ORDER BY DATE";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygo(SqlConnection sqlConn, string factory, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS E ON B.JOB_ORDER_NO=E.JOB_ORDER_NO AND B.BUNDLE_NO=E.BUNDLE_NO AND B.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND E.GARMENT_ORDER_NO='"+go+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.IS_MATCHING='Y' AND E.FACTORY_CD='"+factory+"' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.GARMENT_ORDER_NO='"+go+"' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE ORDER BY DATE";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        //sqlComGet.CommandText = "SELECT A.JOB_ORDER_NO,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO,MIN(B.OUT_QTY)AS OUT_QTY,MIN(B.MATCHING)AS MATCHING FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND A.PART_CD=D.PART_CD AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND D.GARMENT_ORDER_NO='" + go + "' AND A.GARMENT_TYPE='K' AND A.PROCESS_TYPE='I' GROUP BY A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO)AS A GROUP BY A.JOB_ORDER_NO ORDER BY A.JOB_ORDER_NO";
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygodate(SqlConnection sqlConn, string factory, string go, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS E ON B.JOB_ORDER_NO=E.JOB_ORDER_NO AND B.BUNDLE_NO=E.BUNDLE_NO AND B.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND E.GARMENT_ORDER_NO='"+go+"' AND A.CONFIRM_DATE>='"+fromdate+"' AND A.CONFIRM_DATE<='"+todate+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<='" + todate + "' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.GARMENT_ORDER_NO='" + go + "' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE ORDER BY DATE";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygopart(SqlConnection sqlConn, string factory, string go)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS F ON B.JOB_ORDER_NO=F.JOB_ORDER_NO AND B.BUNDLE_NO=F.BUNDLE_NO AND B.PART_CD=F.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND F.GARMENT_ORDER_NO='"+go+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,H.PART_DESC,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS H ON E.PART_CD=H.PART_CD WHERE E.IS_MATCHING='Y' AND E.FACTORY_CD='"+factory+"' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.GARMENT_ORDER_NO='"+go+"' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO,H.PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC ORDER BY DATE";
        //sqlComGet.CommandText = "SELECT A.JOB_ORDER_NO,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.MATCHING ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT A.PROCESS_CD,A.JOB_ORDER_NO,B.BUNDLE_NO,C.PART_DESC,(B.OUT_QTY)AS OUT_QTY,(B.MATCHING)AS MATCHING FROM CIPMS_JO_WIP_HD AS A INNER JOIN CIPMS_JO_WIP_BUNDLE AS B ON A.STOCK_ID=B.STOCK_ID INNER JOIN CIPMS_PART_MASTER AS C ON A.PART_CD=C.PART_CD INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS D ON A.JOB_ORDER_NO=D.JOB_ORDER_NO AND A.PART_CD=D.PART_CD AND B.BUNDLE_NO=D.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND D.GARMENT_ORDER_NO='" + go + "' AND A.GARMENT_TYPE='K' AND A.PROCESS_TYPE='I')AS A GROUP BY A.JOB_ORDER_NO,A.PART_DESC ORDER BY A.JOB_ORDER_NO";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querygodatepart(SqlConnection sqlConn, string factory, string go, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        string sql = "SELECT A.DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CUT)AS CUT,SUM(PRT)AS PRT,SUM(EMB)AS EMB,SUM(FUSE)AS FUSE,SUM(MATCHING)AS MATCHING,SUM(DC)AS DC FROM (SELECT CONVERT(CHAR(10),A.CONFIRM_DATE,120)AS DATE,A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC,SUM(CASE A.PROCESS_CD WHEN 'CUT' THEN A.OUT_QTY ELSE 0 END)as CUT,SUM(CASE A.PROCESS_CD WHEN 'PRT' THEN A.OUT_QTY ELSE 0 END)as PRT,SUM(CASE A.PROCESS_CD WHEN 'EMB' THEN A.OUT_QTY ELSE 0 END)as EMB,SUM(CASE A.PROCESS_CD WHEN 'FUSE' THEN A.OUT_QTY ELSE 0 END)as FUSE,SUM(CASE A.PROCESS_CD WHEN 'MATCHING' THEN 0 ELSE 0 END)as MATCHING,SUM(CASE A.PROCESS_CD WHEN 'DC' THEN A.OUT_QTY ELSE 0 END)as DC FROM (SELECT C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,MIN(D.OUT_QTY)AS OUT_QTY FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_BUNDLE_FOR_SCANNING AS F ON B.JOB_ORDER_NO=F.JOB_ORDER_NO AND B.BUNDLE_NO=F.BUNDLE_NO AND B.PART_CD=F.PART_CD INNER JOIN CIPMS_PART_MASTER AS E ON D.PART_CD=E.PART_CD WHERE A.FACTORY_CD='"+factory+"' AND A.PROCESS_TYPE='I' AND A.PROCESS_GARMENT_TYPE='K' AND A.STATUS='C' AND A.CONFIRM_DATE>='"+fromdate+"' AND A.CONFIRM_DATE<='"+todate+"' AND F.GARMENT_ORDER_NO='"+go+"' GROUP BY C.PROCESS_TYPE,C.GARMENT_TYPE,A.PROCESS_CD,A.CONFIRM_DATE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC)AS A GROUP BY CONVERT(CHAR(10),A.CONFIRM_DATE,120),A.GARMENT_TYPE,A.PROCESS_TYPE,A.PART_DESC ";
        sql += "UNION ALL ";
        sql += "SELECT DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC,0 AS CUT,0 AS PRT,0 AS EMB,0 AS FUSE,SUM(A.MATCHING)AS MATCHING,0 AS DC FROM (SELECT CONVERT(CHAR(10),E.MATCHING_DATE,120)AS DATE,E.GARMENT_TYPE,E.PROCESS_TYPE,H.PART_DESC,MIN(G.MATCHING)AS MATCHING FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS H ON E.PART_CD=H.PART_CD WHERE E.MATCHING_DATE>='"+fromdate+"' AND E.MATCHING_DATE<='"+todate+"' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='"+factory+"' AND E.GARMENT_TYPE='K' AND E.PROCESS_TYPE='I' AND E.GARMENT_ORDER_NO='"+go+"' GROUP BY CONVERT(CHAR(10),E.MATCHING_DATE,120),E.GARMENT_TYPE,E.PROCESS_TYPE,E.JOB_ORDER_NO,E.BUNDLE_NO,H.PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC)AS A GROUP BY DATE,GARMENT_TYPE,PROCESS_TYPE,PART_DESC ORDER BY DATE";
        sqlComGet.CommandText = sql;
        sqlComGet.CommandTimeout = 300;
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querytable2(SqlConnection sqlConn, string factory, string process, string nextprocess, string garmenttype, string processtype, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        if (process == "MATCHING")
        {
            sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,cast(MIN(B.total_qty) as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,MIN(C.MATCHING_QTY)AS OUT_QTY FROM (SELECT A.CUT_LINE,A.JOB_ORDER_NO,SUM(MATCHING)AS MATCHING_QTY FROM (SELECT MIN(G.MATCHING)AS MATCHING,E.CUT_LINE,E.JOB_ORDER_NO FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<dateadd(d,1,'" + todate + "') AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='" + garmenttype + "' AND E.PROCESS_TYPE='" + processtype + "' GROUP BY E.JOB_ORDER_NO,E.BUNDLE_NO,E.CUT_LINE)AS A GROUP BY A.CUT_LINE,A.JOB_ORDER_NO)AS C INNER JOIN JO_HD AS B ON C.JOB_ORDER_NO=B.JO_NO INNER JOIN CUT_BUNDLE_HD AS D ON C.JOB_ORDER_NO=D.JOB_ORDER_NO AND C.CUT_LINE=D.CUT_LINE GROUP BY C.CUT_LINE,C.JOB_ORDER_NO orber by C.CUT_LINE,C.JOB_ORDER_NO ";
        }
        else if (process == "CUT") //tangyh 2018.03.23
        {
            sqlComGet.CommandText = "select CUT_LINE,JOB_ORDER_NO,ORDER_QTY,CUT_QTY,OUT_QTY from CIPMS_FN_OUTPU_TABLE2('" + factory + "','','" + process + "','" + fromdate + "','" + todate + "','N','K','I','C')";
        }
        else if (nextprocess == "all" || process == "all")
        {
            sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,cast(MIN(B.total_qty) as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,MIN(C.OUT_QTY)AS OUT_QTY FROM (SELECT A.CUT_LINE,A.JOB_ORDER_NO,SUM(OUT_QTY)AS OUT_QTY,SUM(MATCHING)AS MATCHING_QTY FROM (SELECT F.CUT_LINE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY,MIN(D.MATCHING)AS MATCHING FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CUT_BUNDLE_HD AS F ON C.JOB_ORDER_NO=F.JOB_ORDER_NO AND D.BUNDLE_NO=F.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.PROCESS_GARMENT_TYPE='K' AND A.PROCESS_TYPE='I' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<dateadd(d,1,'" + todate + "') GROUP BY A.PROCESS_CD,F.CUT_LINE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY A.CUT_LINE,A.JOB_ORDER_NO)AS C INNER JOIN JO_HD AS B ON C.JOB_ORDER_NO=B.JO_NO INNER JOIN CUT_BUNDLE_HD AS D ON C.JOB_ORDER_NO=D.JOB_ORDER_NO AND C.CUT_LINE=D.CUT_LINE GROUP BY C.CUT_LINE,C.JOB_ORDER_NO order by C.CUT_LINE,C.JOB_ORDER_NO";
            
        }
        else
        {
            sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,cast(MIN(B.total_qty) as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,MIN(C.OUT_QTY)AS OUT_QTY FROM (SELECT A.CUT_LINE,A.JOB_ORDER_NO,SUM(OUT_QTY)AS OUT_QTY,SUM(MATCHING)AS MATCHING_QTY FROM (SELECT F.CUT_LINE,C.JOB_ORDER_NO,D.BUNDLE_NO,MIN(D.OUT_QTY)AS OUT_QTY,MIN(D.MATCHING)AS MATCHING FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CUT_BUNDLE_HD AS F ON C.JOB_ORDER_NO=F.JOB_ORDER_NO AND D.BUNDLE_NO=F.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.NEXT_PROCESS_CD='" + nextprocess + "' AND A.PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.NEXT_PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.PROCESS_TYPE='" + processtype + "' AND A.NEXT_PROCESS_TYPE='" + processtype + "' AND A.STATUS='C' AND A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<=dateadd(d,1,'" + todate + "') GROUP BY A.PROCESS_CD,F.CUT_LINE,C.JOB_ORDER_NO,D.BUNDLE_NO)AS A GROUP BY A.CUT_LINE,A.JOB_ORDER_NO)AS C INNER JOIN JO_HD AS B ON C.JOB_ORDER_NO=B.JO_NO INNER JOIN CUT_BUNDLE_HD AS D ON C.JOB_ORDER_NO=D.JOB_ORDER_NO AND C.CUT_LINE=D.CUT_LINE GROUP BY C.CUT_LINE,C.JOB_ORDER_NO order by C.CUT_LINE,C.JOB_ORDER_NO";
        }
        return sqlComGet.ExecuteReader();
    }
    public SqlDataReader querytable2part(SqlConnection sqlConn, string factory, string process, string nextprocess, string garmenttype, string processtype, string fromdate, string todate)
    {
        SqlCommand sqlComGet = new SqlCommand();
        sqlComGet.Connection = sqlConn;
        if (process == "MATCHING")
        {
            sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,cast(MIN(B.total_qty) as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,MIN(C.MATCHING)AS OUT_QTY FROM (SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,SUM(MATCHING)AS MATCHING FROM (SELECT MIN(G.MATCHING)AS MATCHING,E.CUT_LINE,E.JOB_ORDER_NO,A.PART_DESC FROM CIPMS_BUNDLE_FOR_SCANNING AS E INNER JOIN CIPMS_PART_MASTER AS A ON E.PART_CD=A.PART_CD INNER JOIN CIPMS_JO_WIP_HD AS F ON E.JOB_ORDER_NO=F.JOB_ORDER_NO AND E.COLOR_CD=F.COLOR_CODE AND E.SIZE_CD=F.SIZE_CODE AND E.PART_CD=F.PART_CD AND E.FACTORY_CD=F.FACTORY_CD AND E.PROCESS_CD=F.PROCESS_CD AND E.PRODUCTION_LINE_CD=F.PRODUCTION_LINE_CD AND E.GARMENT_TYPE=F.GARMENT_TYPE AND E.PROCESS_TYPE=F.PROCESS_TYPE INNER JOIN CIPMS_JO_WIP_BUNDLE AS G ON F.STOCK_ID=G.STOCK_ID AND E.BUNDLE_NO=G.BUNDLE_NO WHERE E.MATCHING_DATE>='" + fromdate + "' AND E.MATCHING_DATE<='" + todate + "' AND E.IS_MATCHING='Y' AND E.FACTORY_CD='" + factory + "' AND E.GARMENT_TYPE='" + garmenttype + "' AND E.PROCESS_TYPE='" + processtype + "' GROUP BY E.JOB_ORDER_NO,E.BUNDLE_NO,E.CUT_LINE,A.PART_DESC)AS C GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC)AS C INNER JOIN JO_HD AS B ON C.JOB_ORDER_NO=B.JO_NO INNER JOIN CUT_BUNDLE_HD AS D ON C.JOB_ORDER_NO=D.JOB_ORDER_NO AND C.CUT_LINE=D.CUT_LINE GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC";
        }
        else if (nextprocess == "all")
        {
            sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,cast(MIN(B.total_qty) as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,MIN(C.OUT_QTY)AS OUT_QTY FROM (SELECT A.CUT_LINE,A.JOB_ORDER_NO,A.PART_DESC,SUM(OUT_QTY)AS OUT_QTY,SUM(MATCHING)AS MATCHING_QTY FROM (SELECT F.CUT_LINE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,(D.OUT_QTY)AS OUT_QTY,(D.MATCHING)AS MATCHING FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON C.PART_CD=E.PART_CD INNER JOIN CUT_BUNDLE_HD AS F ON C.JOB_ORDER_NO=F.JOB_ORDER_NO AND D.BUNDLE_NO=F.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.PROCESS_TYPE='" + processtype + "' AND A.STATUS='C' AND   (('" + fromdate + "'<>'' and '" + todate + "'<>'' and A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "') or ('" + fromdate + "'='' and '" + todate + "'=''))                   )AS A GROUP BY A.CUT_LINE,A.JOB_ORDER_NO,A.PART_DESC)AS C INNER JOIN JO_HD AS B ON C.JOB_ORDER_NO=B.JO_NO INNER JOIN CUT_BUNDLE_HD AS D ON C.JOB_ORDER_NO=D.JOB_ORDER_NO AND C.CUT_LINE=D.CUT_LINE GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC";
        }
        else
        {
            sqlComGet.CommandText = "SELECT C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC,cast(MIN(B.total_qty) as int)as ORDER_QTY,(SELECT SUM(QTY) FROM CUT_BUNDLE_HD WHERE JOB_ORDER_NO=C.JOB_ORDER_NO GROUP BY JOB_ORDER_NO)as CUT_QTY,MIN(C.OUT_QTY)AS OUT_QTY FROM (SELECT A.CUT_LINE,A.JOB_ORDER_NO,A.PART_DESC,SUM(OUT_QTY)AS OUT_QTY,SUM(MATCHING)AS MATCHING_QTY FROM (SELECT F.CUT_LINE,C.JOB_ORDER_NO,D.BUNDLE_NO,E.PART_DESC,(D.OUT_QTY)AS OUT_QTY,(D.MATCHING)AS MATCHING FROM CIPMS_TRANSFER_HD AS A INNER JOIN CIPMS_TRANSFER_DT AS B ON A.DOC_NO=B.DOC_NO INNER JOIN CIPMS_JO_WIP_HD AS C ON A.FACTORY_CD=C.FACTORY_CD AND A.PROCESS_CD=C.PROCESS_CD AND B.JOB_ORDER_NO=C.JOB_ORDER_NO AND B.PART_CD=C.PART_CD INNER JOIN CIPMS_JO_WIP_BUNDLE AS D ON C.STOCK_ID=D.STOCK_ID AND B.BUNDLE_NO=D.BUNDLE_NO INNER JOIN CIPMS_PART_MASTER AS E ON C.PART_CD=E.PART_CD INNER JOIN CUT_BUNDLE_HD AS F ON C.JOB_ORDER_NO=F.JOB_ORDER_NO AND D.BUNDLE_NO=F.BUNDLE_NO WHERE A.FACTORY_CD='" + factory + "' AND A.PROCESS_CD='" + process + "' AND A.NEXT_PROCESS_CD='" + nextprocess + "' AND A.PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.NEXT_PROCESS_GARMENT_TYPE='" + garmenttype + "' AND A.PROCESS_TYPE='" + processtype + "' AND A.NEXT_PROCESS_TYPE='" + processtype + "' AND A.STATUS='C' AND (('"+fromdate+"'<>'' and '"+todate+"'<>'') and (A.CONFIRM_DATE>='" + fromdate + "' AND A.CONFIRM_DATE<='" + todate + "'))   )AS A  GROUP BY A.CUT_LINE,A.JOB_ORDER_NO,A.PART_DESC)AS C  INNER JOIN JO_HD AS B ON C.JOB_ORDER_NO=B.JO_NO INNER JOIN CUT_BUNDLE_HD AS D ON C.JOB_ORDER_NO=D.JOB_ORDER_NO AND C.CUT_LINE=D.CUT_LINE GROUP BY C.CUT_LINE,C.JOB_ORDER_NO,C.PART_DESC";
        }
        return sqlComGet.ExecuteReader();
    }
}